-- ZAD 1

CREATE TABLE DOKUMENTY(
    ID NUMBER(12) PRIMARY KEY,
    DOKUMENT CLOB
);

-- ZAD 2

DECLARE
    DCLOB CLOB;
BEGIN
    FOR i IN 1..10000
    LOOP
        DCLOB := CONCAT(DCLOB, 'Oto tekst.');
    END LOOP;
    
    INSERT INTO DOKUMENTY VALUES (1, DCLOB);
END;

--  ZAD 3

SELECT * FROM DOKUMENTY;
SELECT UPPER(DOKUMENT) FROM DOKUMENTY;
SELECT LENGTH(DOKUMENT) FROM DOKUMENTY;
SELECT DBMS_LOB.getlength(DOKUMENT) FROM DOKUMENTY;
SELECT SUBSTR(DOKUMENT, 5, 1000) FROM DOKUMENTY;
SELECT DBMS_LOB.substr(DOKUMENT, 1000, 5) FROM DOKUMENTY;

-- ZAD 4

INSERT INTO DOKUMENTY VALUES (2, EMPTY_CLOB());

-- ZAD 5

INSERT INTO DOKUMENTY VALUES (3, NULL);
COMMIT;

-- ZAD 6

SELECT * FROM DOKUMENTY;
SELECT UPPER(DOKUMENT) FROM DOKUMENTY;
SELECT LENGTH(DOKUMENT) FROM DOKUMENTY;
SELECT DBMS_LOB.getlength(DOKUMENT) FROM DOKUMENTY;
SELECT SUBSTR(DOKUMENT, 5, 1000) FROM DOKUMENTY;
SELECT DBMS_LOB.substr(DOKUMENT, 1000, 5) FROM DOKUMENTY;

-- ZAD 7

SELECT * FROM ALL_DIRECTORIES;

--
SET SERVEROUTPUT ON;
-- ZAD 8

DECLARE
    LOC BFILE := BFILENAME('ZSBD_DIR','dokument.txt');
    LOB_OBJ CLOB;
    doffset integer := 1;
    soffset integer := 1;
    langctx integer := 0;
    warn integer := null;
BEGIN
    SELECT DOKUMENT INTO LOB_OBJ FROM DOKUMENTY WHERE ID=2 FOR UPDATE;

    DBMS_LOB.FILEOPEN(LOC, DBMS_LOB.file_readonly);
    DBMS_LOB.LOADCLOBFROMFILE(LOB_OBJ, LOC, DBMS_LOB.LOBMAXSIZE, doffset, soffset, 873, langctx, warn);
    DBMS_LOB.FILECLOSE(LOC);
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Status operacji: '||warn);
END;

-- ZAD 9

UPDATE DOKUMENTY SET DOKUMENT = TO_CLOB(BFILENAME('ZSBD_DIR', 'dokument.txt')) WHERE ID=3;

-- ZAD 10

SELECT * FROM DOKUMENTY;

-- ZAD 11

SELECT DBMS_LOB.getlength(DOKUMENT) FROM DOKUMENTY;

-- ZAD 12

DROP TABLE DOKUMENTY;

-- ZAD 13

CREATE OR REPLACE PROCEDURE CLOB_CENSOR(
    LOB_OBJ IN OUT CLOB,
    PATTERN VARCHAR2
) IS
    REPLACEMENT VARCHAR2(4000);
    POS INTEGER;
BEGIN
    FOR i IN 1..LENGTH(PATTERN) 
    LOOP
        REPLACEMENT := REPLACEMENT || '.';
    END LOOP;
    
    LOOP
        POS := DBMS_LOB.instr(LOB_OBJ, PATTERN);
        EXIT WHEN POS = 0;
        DBMS_LOB.write(LOB_OBJ, LENGTH(PATTERN), POS, REPLACEMENT);
    END LOOP;
END CLOB_CENSOR;

-- ZAD 14

CREATE TABLE BIOGRAPHIES AS SELECT * FROM ZSBD_TOOLS.BIOGRAPHIES;

DECLARE
    LOB_OBJ CLOB;
BEGIN
    SELECT BIO INTO LOB_OBJ FROM BIOGRAPHIES WHERE ID=1 FOR UPDATE;
    CLOB_CENSOR(LOB_OBJ, 'Cimrman');
    COMMIT;
END;

-- ZAD 15

DROP TABLE BIOGRAPHIES;