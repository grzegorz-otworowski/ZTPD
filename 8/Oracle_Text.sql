-- Operator CONTAINS - Podstawy
-- ZAD 1

CREATE TABLE CYTATY
AS (SELECT * FROM ZSBD_TOOLS.CYTATY);

-- ZAD 2

SELECT AUTOR, TEKST
FROM CYTATY
WHERE UPPER(TEKST) LIKE '%OPTYMISTA%' AND UPPER(TEKST) LIKE '%PESYMISTA%';

-- ZAD 3

CREATE INDEX CYT_TEKST_IDX ON CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZAD 4

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'PESYMISTA AND OPTYMISTA')>0;

-- ZAD 5

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'PESYMISTA NOT OPTYMISTA')>0;

-- ZAD 6

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((PESYMISTA, OPTYMISTA), 3)')>0;

-- ZAD 7

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((PESYMISTA, OPTYMISTA), 10)')>0;

-- ZAD 8

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, '¯YCI%')>0;

-- ZAD 9

SELECT AUTOR, TEKST, SCORE(1)
FROM CYTATY
WHERE CONTAINS(TEKST, '¯YCI%', 1)>0;

-- ZAD 10

SELECT AUTOR, TEKST, SCORE(1) AS DOPASOWANIE
FROM CYTATY
WHERE CONTAINS(TEKST, '¯YCI%', 1)>0 AND ROWNUM = 1
ORDER BY 3;

-- ZAD 11

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'FUZZY(PROBLEM,,,N)')>0;

-- ZAD 12

INSERT INTO CYTATY
VALUES(100,'Bertrand Russel', 'To smutne, ¿e g³upcy s¹ tacy pewni
siebie, a ludzie rozs¹dni tacy pe³ni w¹tpliwoœci.');
COMMIT;

-- ZAD 13

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'G£UPCY')>0;

-- ZAD 14

SELECT * FROM DR$CYT_TEKST_IDX$I;

-- ZAD 15

DROP INDEX CYT_TEKST_IDX;
CREATE INDEX CYT_TEKST_IDX ON CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZAD 16

SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'G£UPCY')>0;

-- ZAD 17

DROP INDEX CYT_TEKST_IDX;
DROP TABLE CYTATY;

-- Zaawansowane indeksowanie i wyszukiwanie
-- ZAD 1

CREATE TABLE QUOTES
AS (SELECT * FROM ZSBD_TOOLS.QUOTES);

-- ZAD 2

CREATE INDEX QUO_TEXT_IDX ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZAD 3

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'WORK')>0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '$WORK')>0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'WORKING')>0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '$WORKING')>0;
-- ZAD 4

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'IT')>0;

-- ZAD 5

SELECT * FROM CTX_STOPLISTS;

-- ZAD 6

SELECT * FROM CTX_STOPWORDS;

-- ZAD 7

DROP INDEX QUO_TEXT_IDX;

CREATE INDEX QUO_TEXT_IDX ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('stoplist CTXSYS.EMPTY_STOPLIST');

-- ZAD 8

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'IT')>0;

-- ZAD 9

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'FOOL AND HUMANS')>0;

-- ZAD 10

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'FOOL AND COMPUTER')>0;

-- ZAD 11

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(FOOL AND HUMANS) WITHIN SENTENCE')>0;

-- ZAD 12

DROP INDEX QUO_TEXT_IDX;

-- ZAD 13

begin
    ctx_ddl.create_section_group('nullgroup', 'NULL_SECTION_GROUP');
    ctx_ddl.add_special_section('nullgroup', 'SENTENCE');
    ctx_ddl.add_special_section('nullgroup', 'PARAGRAPH');
end; 

-- ZAD 14

CREATE INDEX QUO_TEXT_IDX ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('stoplist CTXSYS.EMPTY_STOPLIST
             section group nullgroup');

-- ZAD 15

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(FOOL AND HUMANS) WITHIN SENTENCE')>0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(FOOL AND COMPUTER) WITHIN SENTENCE')>0;

-- ZAD 16

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'HUMANS')>0;

-- ZAD 17

DROP INDEX QUO_TEXT_IDX;

begin
    ctx_ddl.create_preference('lex_z_m','BASIC_LEXER');
    ctx_ddl.set_attribute('lex_z_m','printjoins', '_-');
    ctx_ddl.set_attribute ('lex_z_m','index_text', 'YES');
end;

CREATE INDEX QUO_TEXT_IDX ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('stoplist CTXSYS.EMPTY_STOPLIST
             section group nullgroup
             LEXER lex_z_m');

-- ZAD 18

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'HUMANS')>0;

-- ZAD 19

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'NON\-HUMANS')>0;

-- ZAD 20

DROP TABLE QUOTES;
BEGIN
    ctx_ddl.drop_preference('lex_z_m');
END;

